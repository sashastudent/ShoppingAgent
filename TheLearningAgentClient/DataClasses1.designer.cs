#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheLearningAgentClient
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.Xml.Serialization;
    using Newtonsoft.Json;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_shopagent")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertuser_ref_limit(user_ref_limit instance);
    partial void Updateuser_ref_limit(user_ref_limit instance);
    partial void Deleteuser_ref_limit(user_ref_limit instance);
    partial void Insertcategory_product(category_product instance);
    partial void Updatecategory_product(category_product instance);
    partial void Deletecategory_product(category_product instance);
    partial void Insertchain_store(chain_store instance);
    partial void Updatechain_store(chain_store instance);
    partial void Deletechain_store(chain_store instance);
    partial void Insertlimit(limit instance);
    partial void Updatelimit(limit instance);
    partial void Deletelimit(limit instance);
    partial void Insertonly_receipt_user(only_receipt_user instance);
    partial void Updateonly_receipt_user(only_receipt_user instance);
    partial void Deleteonly_receipt_user(only_receipt_user instance);
    partial void Insertproduct_component(product_component instance);
    partial void Updateproduct_component(product_component instance);
    partial void Deleteproduct_component(product_component instance);
    partial void Insertreceipet_ref_product(receipet_ref_product instance);
    partial void Updatereceipet_ref_product(receipet_ref_product instance);
    partial void Deletereceipet_ref_product(receipet_ref_product instance);
    partial void Insertreceipt(receipt instance);
    partial void Updatereceipt(receipt instance);
    partial void Deletereceipt(receipt instance);
    partial void Insertreceipt_ref_user(receipt_ref_user instance);
    partial void Updatereceipt_ref_user(receipt_ref_user instance);
    partial void Deletereceipt_ref_user(receipt_ref_user instance);
    partial void Insertsupermarket(supermarket instance);
    partial void Updatesupermarket(supermarket instance);
    partial void Deletesupermarket(supermarket instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::TheLearningAgentClient.Properties.Settings.Default.db_shopagentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<alternative_product> alternative_products
		{
			get
			{
				return this.GetTable<alternative_product>();
			}
		}
		
		public System.Data.Linq.Table<user_ref_limit> user_ref_limits
		{
			get
			{
				return this.GetTable<user_ref_limit>();
			}
		}
		
		public System.Data.Linq.Table<category_product> category_products
		{
			get
			{
				return this.GetTable<category_product>();
			}
		}
		
		public System.Data.Linq.Table<chain_store> chain_stores
		{
			get
			{
				return this.GetTable<chain_store>();
			}
		}
		
		public System.Data.Linq.Table<components_ref_product> components_ref_products
		{
			get
			{
				return this.GetTable<components_ref_product>();
			}
		}
		
		public System.Data.Linq.Table<limit> limits
		{
			get
			{
				return this.GetTable<limit>();
			}
		}
		
		public System.Data.Linq.Table<only_receipt_user> only_receipt_users
		{
			get
			{
				return this.GetTable<only_receipt_user>();
			}
		}
		
		public System.Data.Linq.Table<product_component> product_components
		{
			get
			{
				return this.GetTable<product_component>();
			}
		}
		
		public System.Data.Linq.Table<receipet_ref_product> receipet_ref_products
		{
			get
			{
				return this.GetTable<receipet_ref_product>();
			}
		}
		
		public System.Data.Linq.Table<receipt> receipts
		{
			get
			{
				return this.GetTable<receipt>();
			}
		}
		
		public System.Data.Linq.Table<receipt_ref_user> receipt_ref_users
		{
			get
			{
				return this.GetTable<receipt_ref_user>();
			}
		}
		
		public System.Data.Linq.Table<supermarket> supermarkets
		{
			get
			{
				return this.GetTable<supermarket>();
			}
		}
		
		public System.Data.Linq.Table<unlike_component> unlike_components
		{
			get
			{
				return this.GetTable<unlike_component>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alternative_products")]
	public partial class alternative_product
	{
		
		private System.Nullable<int> _product_id;
		
		private System.Nullable<int> _alternative_product_1;
		
		private System.Nullable<int> _alternative_product_2;
		
		public alternative_product()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
		public System.Nullable<int> product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this._product_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alternative_product_1", DbType="Int")]
		public System.Nullable<int> alternative_product_1
		{
			get
			{
				return this._alternative_product_1;
			}
			set
			{
				if ((this._alternative_product_1 != value))
				{
					this._alternative_product_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alternative_product_2", DbType="Int")]
		public System.Nullable<int> alternative_product_2
		{
			get
			{
				return this._alternative_product_2;
			}
			set
			{
				if ((this._alternative_product_2 != value))
				{
					this._alternative_product_2 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_ref_limits")]
	public partial class user_ref_limit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _limit_id;
		
		private int _user_id;
		
		private System.Nullable<bool> _Partial;
		
		private EntityRef<limit> _limit;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlimit_idChanging(int value);
    partial void Onlimit_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnPartialChanging(System.Nullable<bool> value);
    partial void OnPartialChanged();
    #endregion
		
		public user_ref_limit()
		{
			this._limit = default(EntityRef<limit>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int limit_id
		{
			get
			{
				return this._limit_id;
			}
			set
			{
				if ((this._limit_id != value))
				{
					if (this._limit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlimit_idChanging(value);
					this.SendPropertyChanging();
					this._limit_id = value;
					this.SendPropertyChanged("limit_id");
					this.Onlimit_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partial", DbType="Bit")]
		public System.Nullable<bool> Partial
		{
			get
			{
				return this._Partial;
			}
			set
			{
				if ((this._Partial != value))
				{
					this.OnPartialChanging(value);
					this.SendPropertyChanging();
					this._Partial = value;
					this.SendPropertyChanged("Partial");
					this.OnPartialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="limit_user_ref_limit", Storage="_limit", ThisKey="limit_id", OtherKey="limit_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public limit limit
		{
			get
			{
				return this._limit.Entity;
			}
			set
			{
				limit previousValue = this._limit.Entity;
				if (((previousValue != value) 
							|| (this._limit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._limit.Entity = null;
						previousValue.user_ref_limits.Remove(this);
					}
					this._limit.Entity = value;
					if ((value != null))
					{
						value.user_ref_limits.Add(this);
						this._limit_id = value.limit_id;
					}
					else
					{
						this._limit_id = default(int);
					}
					this.SendPropertyChanged("limit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_ref_limit", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_ref_limits.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_ref_limits.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category_products")]
	public partial class category_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _category_id;
		
		private string _category_name;
		
		private string _image_category;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    partial void Onimage_categoryChanging(string value);
    partial void Onimage_categoryChanged();
    #endregion
		
		public category_product()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="NVarChar(50)")]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_category", DbType="NChar(10)")]
		public string image_category
		{
			get
			{
				return this._image_category;
			}
			set
			{
				if ((this._image_category != value))
				{
					this.Onimage_categoryChanging(value);
					this.SendPropertyChanging();
					this._image_category = value;
					this.SendPropertyChanged("image_category");
					this.Onimage_categoryChanged();
				}
			}
		}

        [XmlIgnore]
        [JsonIgnore]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product_product", Storage="_products", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category_product = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.category_product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chain_store")]
	public partial class chain_store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _chain_store_id;
		
		private string _chain_name;
		
		private EntitySet<supermarket> _supermarkets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onchain_store_idChanging(int value);
    partial void Onchain_store_idChanged();
    partial void Onchain_nameChanging(string value);
    partial void Onchain_nameChanged();
    #endregion
		
		public chain_store()
		{
			this._supermarkets = new EntitySet<supermarket>(new Action<supermarket>(this.attach_supermarkets), new Action<supermarket>(this.detach_supermarkets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chain_store_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int chain_store_id
		{
			get
			{
				return this._chain_store_id;
			}
			set
			{
				if ((this._chain_store_id != value))
				{
					this.Onchain_store_idChanging(value);
					this.SendPropertyChanging();
					this._chain_store_id = value;
					this.SendPropertyChanged("chain_store_id");
					this.Onchain_store_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chain_name", DbType="NChar(10)")]
		public string chain_name
		{
			get
			{
				return this._chain_name;
			}
			set
			{
				if ((this._chain_name != value))
				{
					this.Onchain_nameChanging(value);
					this.SendPropertyChanging();
					this._chain_name = value;
					this.SendPropertyChanged("chain_name");
					this.Onchain_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chain_store_supermarket", Storage="_supermarkets", ThisKey="chain_store_id", OtherKey="chain_store_id")]
		public EntitySet<supermarket> supermarkets
		{
			get
			{
				return this._supermarkets;
			}
			set
			{
				this._supermarkets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_supermarkets(supermarket entity)
		{
			this.SendPropertyChanging();
			entity.chain_store = this;
		}
		
		private void detach_supermarkets(supermarket entity)
		{
			this.SendPropertyChanging();
			entity.chain_store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.components_ref_product")]
	public partial class components_ref_product
	{
		
		private int _component_id;
		
		private int _product_id;
		
		public components_ref_product()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_component_id", DbType="Int NOT NULL")]
		public int component_id
		{
			get
			{
				return this._component_id;
			}
			set
			{
				if ((this._component_id != value))
				{
					this._component_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL")]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this._product_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.limits")]
	public partial class limit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _limit_id;
		
		private string _limit_name;
		
		private EntitySet<user_ref_limit> _user_ref_limits;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlimit_idChanging(int value);
    partial void Onlimit_idChanged();
    partial void Onlimit_nameChanging(string value);
    partial void Onlimit_nameChanged();
    #endregion
		
		public limit()
		{
			this._user_ref_limits = new EntitySet<user_ref_limit>(new Action<user_ref_limit>(this.attach_user_ref_limits), new Action<user_ref_limit>(this.detach_user_ref_limits));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int limit_id
		{
			get
			{
				return this._limit_id;
			}
			set
			{
				if ((this._limit_id != value))
				{
					this.Onlimit_idChanging(value);
					this.SendPropertyChanging();
					this._limit_id = value;
					this.SendPropertyChanged("limit_id");
					this.Onlimit_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit_name", DbType="NVarChar(50)")]
		public string limit_name
		{
			get
			{
				return this._limit_name;
			}
			set
			{
				if ((this._limit_name != value))
				{
					this.Onlimit_nameChanging(value);
					this.SendPropertyChanging();
					this._limit_name = value;
					this.SendPropertyChanged("limit_name");
					this.Onlimit_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="limit_user_ref_limit", Storage="_user_ref_limits", ThisKey="limit_id", OtherKey="limit_id")]
		public EntitySet<user_ref_limit> user_ref_limits
		{
			get
			{
				return this._user_ref_limits;
			}
			set
			{
				this._user_ref_limits.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_ref_limits(user_ref_limit entity)
		{
			this.SendPropertyChanging();
			entity.limit = this;
		}
		
		private void detach_user_ref_limits(user_ref_limit entity)
		{
			this.SendPropertyChanging();
			entity.limit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.only_receipt_user")]
	public partial class only_receipt_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_num;
		
		private int _user_id;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_numChanging(int value);
    partial void Onuser_numChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    #endregion
		
		public only_receipt_user()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_num", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_num
		{
			get
			{
				return this._user_num;
			}
			set
			{
				if ((this._user_num != value))
				{
					this.Onuser_numChanging(value);
					this.SendPropertyChanging();
					this._user_num = value;
					this.SendPropertyChanged("user_num");
					this.Onuser_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_only_receipt_user", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.only_receipt_users.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.only_receipt_users.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product_components")]
	public partial class product_component : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _component_id;
		
		private string _component_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncomponent_idChanging(int value);
    partial void Oncomponent_idChanged();
    partial void Oncomponent_nameChanging(string value);
    partial void Oncomponent_nameChanged();
    #endregion
		
		public product_component()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_component_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int component_id
		{
			get
			{
				return this._component_id;
			}
			set
			{
				if ((this._component_id != value))
				{
					this.Oncomponent_idChanging(value);
					this.SendPropertyChanging();
					this._component_id = value;
					this.SendPropertyChanged("component_id");
					this.Oncomponent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_component_name", DbType="NVarChar(50)")]
		public string component_name
		{
			get
			{
				return this._component_name;
			}
			set
			{
				if ((this._component_name != value))
				{
					this.Oncomponent_nameChanging(value);
					this.SendPropertyChanging();
					this._component_name = value;
					this.SendPropertyChanged("component_name");
					this.Oncomponent_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receipet_ref_product")]
	public partial class receipet_ref_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _receipt_id;
		
		private int _product_id;
		
		private double _quantity;
		
		private EntityRef<receipt> _receipt;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreceipt_idChanging(int value);
    partial void Onreceipt_idChanged();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void OnquantityChanging(double value);
    partial void OnquantityChanged();
    #endregion
		
		public receipet_ref_product()
		{
			this._receipt = default(EntityRef<receipt>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int receipt_id
		{
			get
			{
				return this._receipt_id;
			}
			set
			{
				if ((this._receipt_id != value))
				{
					if (this._receipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreceipt_idChanging(value);
					this.SendPropertyChanging();
					this._receipt_id = value;
					this.SendPropertyChanged("receipt_id");
					this.Onreceipt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_receipet_ref_product", Storage="_receipt", ThisKey="receipt_id", OtherKey="receipt_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public receipt receipt
		{
			get
			{
				return this._receipt.Entity;
			}
			set
			{
				receipt previousValue = this._receipt.Entity;
				if (((previousValue != value) 
							|| (this._receipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._receipt.Entity = null;
						previousValue.receipet_ref_products.Remove(this);
					}
					this._receipt.Entity = value;
					if ((value != null))
					{
						value.receipet_ref_products.Add(this);
						this._receipt_id = value.receipt_id;
					}
					else
					{
						this._receipt_id = default(int);
					}
					this.SendPropertyChanged("receipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_receipet_ref_product", Storage="_product", ThisKey="product_id", OtherKey="product_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.receipet_ref_products.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.receipet_ref_products.Add(this);
						this._product_id = value.product_id;
					}
					else
					{
						this._product_id = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receipt")]
	public partial class receipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _receipt_id;
		
		private System.Nullable<decimal> _sum;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _market_id;
		
		private EntitySet<receipet_ref_product> _receipet_ref_products;
		
		private EntitySet<receipt_ref_user> _receipt_ref_users;
		
		private EntityRef<supermarket> _supermarket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreceipt_idChanging(int value);
    partial void Onreceipt_idChanged();
    partial void OnsumChanging(System.Nullable<decimal> value);
    partial void OnsumChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onmarket_idChanging(System.Nullable<int> value);
    partial void Onmarket_idChanged();
    #endregion
		
		public receipt()
		{
			this._receipet_ref_products = new EntitySet<receipet_ref_product>(new Action<receipet_ref_product>(this.attach_receipet_ref_products), new Action<receipet_ref_product>(this.detach_receipet_ref_products));
			this._receipt_ref_users = new EntitySet<receipt_ref_user>(new Action<receipt_ref_user>(this.attach_receipt_ref_users), new Action<receipt_ref_user>(this.detach_receipt_ref_users));
			this._supermarket = default(EntityRef<supermarket>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int receipt_id
		{
			get
			{
				return this._receipt_id;
			}
			set
			{
				if ((this._receipt_id != value))
				{
					this.Onreceipt_idChanging(value);
					this.SendPropertyChanging();
					this._receipt_id = value;
					this.SendPropertyChanged("receipt_id");
					this.Onreceipt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sum", DbType="Money")]
		public System.Nullable<decimal> sum
		{
			get
			{
				return this._sum;
			}
			set
			{
				if ((this._sum != value))
				{
					this.OnsumChanging(value);
					this.SendPropertyChanging();
					this._sum = value;
					this.SendPropertyChanged("sum");
					this.OnsumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_id", DbType="Int")]
		public System.Nullable<int> market_id
		{
			get
			{
				return this._market_id;
			}
			set
			{
				if ((this._market_id != value))
				{
					if (this._supermarket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmarket_idChanging(value);
					this.SendPropertyChanging();
					this._market_id = value;
					this.SendPropertyChanged("market_id");
					this.Onmarket_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_receipet_ref_product", Storage="_receipet_ref_products", ThisKey="receipt_id", OtherKey="receipt_id")]
		public EntitySet<receipet_ref_product> receipet_ref_products
		{
			get
			{
				return this._receipet_ref_products;
			}
			set
			{
				this._receipet_ref_products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_receipt_ref_user", Storage="_receipt_ref_users", ThisKey="receipt_id", OtherKey="receipt_id")]
		public EntitySet<receipt_ref_user> receipt_ref_users
		{
			get
			{
				return this._receipt_ref_users;
			}
			set
			{
				this._receipt_ref_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supermarket_receipt", Storage="_supermarket", ThisKey="market_id", OtherKey="market_id", IsForeignKey=true)]
		public supermarket supermarket
		{
			get
			{
				return this._supermarket.Entity;
			}
			set
			{
				supermarket previousValue = this._supermarket.Entity;
				if (((previousValue != value) 
							|| (this._supermarket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supermarket.Entity = null;
						previousValue.receipts.Remove(this);
					}
					this._supermarket.Entity = value;
					if ((value != null))
					{
						value.receipts.Add(this);
						this._market_id = value.market_id;
					}
					else
					{
						this._market_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("supermarket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receipet_ref_products(receipet_ref_product entity)
		{
			this.SendPropertyChanging();
			entity.receipt = this;
		}
		
		private void detach_receipet_ref_products(receipet_ref_product entity)
		{
			this.SendPropertyChanging();
			entity.receipt = null;
		}
		
		private void attach_receipt_ref_users(receipt_ref_user entity)
		{
			this.SendPropertyChanging();
			entity.receipt = this;
		}
		
		private void detach_receipt_ref_users(receipt_ref_user entity)
		{
			this.SendPropertyChanging();
			entity.receipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.receipt_ref_user")]
	public partial class receipt_ref_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _receipt_id;
		
		private EntityRef<receipt> _receipt;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onreceipt_idChanging(int value);
    partial void Onreceipt_idChanged();
    #endregion
		
		public receipt_ref_user()
		{
			this._receipt = default(EntityRef<receipt>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receipt_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int receipt_id
		{
			get
			{
				return this._receipt_id;
			}
			set
			{
				if ((this._receipt_id != value))
				{
					if (this._receipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreceipt_idChanging(value);
					this.SendPropertyChanging();
					this._receipt_id = value;
					this.SendPropertyChanged("receipt_id");
					this.Onreceipt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="receipt_receipt_ref_user", Storage="_receipt", ThisKey="receipt_id", OtherKey="receipt_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public receipt receipt
		{
			get
			{
				return this._receipt.Entity;
			}
			set
			{
				receipt previousValue = this._receipt.Entity;
				if (((previousValue != value) 
							|| (this._receipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._receipt.Entity = null;
						previousValue.receipt_ref_users.Remove(this);
					}
					this._receipt.Entity = value;
					if ((value != null))
					{
						value.receipt_ref_users.Add(this);
						this._receipt_id = value.receipt_id;
					}
					else
					{
						this._receipt_id = default(int);
					}
					this.SendPropertyChanged("receipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_receipt_ref_user", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.receipt_ref_users.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.receipt_ref_users.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.supermarket")]
	public partial class supermarket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _market_id;
		
		private string _address;
		
		private System.Nullable<int> _chain_store_id;
		
		private string _market_name;
		
		private EntitySet<receipt> _receipts;
		
		private EntityRef<chain_store> _chain_store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmarket_idChanging(int value);
    partial void Onmarket_idChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onchain_store_idChanging(System.Nullable<int> value);
    partial void Onchain_store_idChanged();
    partial void Onmarket_nameChanging(string value);
    partial void Onmarket_nameChanged();
    #endregion
		
		public supermarket()
		{
			this._receipts = new EntitySet<receipt>(new Action<receipt>(this.attach_receipts), new Action<receipt>(this.detach_receipts));
			this._chain_store = default(EntityRef<chain_store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int market_id
		{
			get
			{
				return this._market_id;
			}
			set
			{
				if ((this._market_id != value))
				{
					this.Onmarket_idChanging(value);
					this.SendPropertyChanging();
					this._market_id = value;
					this.SendPropertyChanged("market_id");
					this.Onmarket_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chain_store_id", DbType="Int")]
		public System.Nullable<int> chain_store_id
		{
			get
			{
				return this._chain_store_id;
			}
			set
			{
				if ((this._chain_store_id != value))
				{
					if (this._chain_store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onchain_store_idChanging(value);
					this.SendPropertyChanging();
					this._chain_store_id = value;
					this.SendPropertyChanged("chain_store_id");
					this.Onchain_store_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_market_name", DbType="NChar(10)")]
		public string market_name
		{
			get
			{
				return this._market_name;
			}
			set
			{
				if ((this._market_name != value))
				{
					this.Onmarket_nameChanging(value);
					this.SendPropertyChanging();
					this._market_name = value;
					this.SendPropertyChanged("market_name");
					this.Onmarket_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supermarket_receipt", Storage="_receipts", ThisKey="market_id", OtherKey="market_id")]
		public EntitySet<receipt> receipts
		{
			get
			{
				return this._receipts;
			}
			set
			{
				this._receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chain_store_supermarket", Storage="_chain_store", ThisKey="chain_store_id", OtherKey="chain_store_id", IsForeignKey=true)]
		public chain_store chain_store
		{
			get
			{
				return this._chain_store.Entity;
			}
			set
			{
				chain_store previousValue = this._chain_store.Entity;
				if (((previousValue != value) 
							|| (this._chain_store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._chain_store.Entity = null;
						previousValue.supermarkets.Remove(this);
					}
					this._chain_store.Entity = value;
					if ((value != null))
					{
						value.supermarkets.Add(this);
						this._chain_store_id = value.chain_store_id;
					}
					else
					{
						this._chain_store_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("chain_store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.supermarket = this;
		}
		
		private void detach_receipts(receipt entity)
		{
			this.SendPropertyChanging();
			entity.supermarket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unlike_components")]
	public partial class unlike_component
	{
		
		private int _component_id;
		
		private int _user_id;
		
		public unlike_component()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_component_id", DbType="Int NOT NULL")]
		public int component_id
		{
			get
			{
				return this._component_id;
			}
			set
			{
				if ((this._component_id != value))
				{
					this._component_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this._user_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _user_name;
		
		private string _password;
		
		private string _name;
		
		private string _last_name;
		
		private string _phone;
		
		private string _address;
		
		private EntitySet<user_ref_limit> _user_ref_limits;
		
		private EntitySet<only_receipt_user> _only_receipt_users;
		
		private EntitySet<receipt_ref_user> _receipt_ref_users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public user()
		{
			this._user_ref_limits = new EntitySet<user_ref_limit>(new Action<user_ref_limit>(this.attach_user_ref_limits), new Action<user_ref_limit>(this.detach_user_ref_limits));
			this._only_receipt_users = new EntitySet<only_receipt_user>(new Action<only_receipt_user>(this.attach_only_receipt_users), new Action<only_receipt_user>(this.detach_only_receipt_users));
			this._receipt_ref_users = new EntitySet<receipt_ref_user>(new Action<receipt_ref_user>(this.attach_receipt_ref_users), new Action<receipt_ref_user>(this.detach_receipt_ref_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(10)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NChar(10)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NChar(10)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_ref_limit", Storage="_user_ref_limits", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<user_ref_limit> user_ref_limits
		{
			get
			{
				return this._user_ref_limits;
			}
			set
			{
				this._user_ref_limits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_only_receipt_user", Storage="_only_receipt_users", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<only_receipt_user> only_receipt_users
		{
			get
			{
				return this._only_receipt_users;
			}
			set
			{
				this._only_receipt_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_receipt_ref_user", Storage="_receipt_ref_users", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<receipt_ref_user> receipt_ref_users
		{
			get
			{
				return this._receipt_ref_users;
			}
			set
			{
				this._receipt_ref_users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_ref_limits(user_ref_limit entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_ref_limits(user_ref_limit entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_only_receipt_users(only_receipt_user entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_only_receipt_users(only_receipt_user entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_receipt_ref_users(receipt_ref_user entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_receipt_ref_users(receipt_ref_user entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _product_id;
		
		private string _product_name;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<int> _category_id;
		
		private string _image;
		
		private System.Nullable<bool> _weighable;
		
		private EntitySet<receipet_ref_product> _receipet_ref_products;
		
		private EntityRef<category_product> _category_product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproduct_idChanging(int value);
    partial void Onproduct_idChanged();
    partial void Onproduct_nameChanging(string value);
    partial void Onproduct_nameChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void Oncategory_idChanging(System.Nullable<int> value);
    partial void Oncategory_idChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnweighableChanging(System.Nullable<bool> value);
    partial void OnweighableChanged();
    #endregion
		
		public product()
		{
			this._receipet_ref_products = new EntitySet<receipet_ref_product>(new Action<receipet_ref_product>(this.attach_receipet_ref_products), new Action<receipet_ref_product>(this.detach_receipet_ref_products));
			this._category_product = default(EntityRef<category_product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_name", DbType="NVarChar(50)")]
		public string product_name
		{
			get
			{
				return this._product_name;
			}
			set
			{
				if ((this._product_name != value))
				{
					this.Onproduct_nameChanging(value);
					this.SendPropertyChanging();
					this._product_name = value;
					this.SendPropertyChanged("product_name");
					this.Onproduct_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int")]
		public System.Nullable<int> category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._category_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(50)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weighable", DbType="Bit")]
		public System.Nullable<bool> weighable
		{
			get
			{
				return this._weighable;
			}
			set
			{
				if ((this._weighable != value))
				{
					this.OnweighableChanging(value);
					this.SendPropertyChanging();
					this._weighable = value;
					this.SendPropertyChanged("weighable");
					this.OnweighableChanged();
				}
			}
		}

        [XmlIgnore]
        [JsonIgnore]
        [global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_receipet_ref_product", Storage="_receipet_ref_products", ThisKey="product_id", OtherKey="product_id")]
		public EntitySet<receipet_ref_product> receipet_ref_products
		{
			get
			{
				return this._receipet_ref_products;
			}
			set
			{
				this._receipet_ref_products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_product_product", Storage="_category_product", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public category_product category_product
		{
			get
			{
				return this._category_product.Entity;
			}
			set
			{
				category_product previousValue = this._category_product.Entity;
				if (((previousValue != value) 
							|| (this._category_product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category_product.Entity = null;
						previousValue.products.Remove(this);
					}
					this._category_product.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("category_product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_receipet_ref_products(receipet_ref_product entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_receipet_ref_products(receipet_ref_product entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
}
#pragma warning restore 1591
